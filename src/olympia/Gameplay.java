/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package olympia;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import static olympia.Client.dout;

/**
 *
 * @author H
 */
public class Gameplay extends javax.swing.JFrame {

    /**
     * Creates new form Gameplay
     */
    public Gameplay() {
        initComponents();
    }

    public JButton getMsgAnswerAccept() {
        return msgAnswerAccept;
    }

    public void setMsgAnswerAccept(JButton msgAnswerAccept) {
        this.msgAnswerAccept = msgAnswerAccept;
    }

    public JButton getMsgAnswerDeny() {
        return msgAnswerDeny;
    }

    public JLabel getMsgRound() {
        return msgRound;
    }

    public void setMsgRound(JLabel msgRound) {
        this.msgRound = msgRound;
    }

    public void setMsgAnswerDeny(JButton msgAnswerDeny) {
        this.msgAnswerDeny = msgAnswerDeny;
    }

    public JButton getMsgHopestarNo() {
        return msgHopestarNo;
    }

    public void setMsgHopestarNo(JButton msgHopestarNo) {
        this.msgHopestarNo = msgHopestarNo;
    }

    public JButton getMsgHopestarYes() {
        return msgHopestarYes;
    }

    public void setMsgHopestarYes(JButton msgHopestarYes) {
        this.msgHopestarYes = msgHopestarYes;
    }

    public JLabel getMsgScore1() {
        return msgScore1;
    }

    public void setMsgScore1(JLabel msgScore1) {
        this.msgScore1 = msgScore1;
    }

    public JLabel getMsgScore2() {
        return msgScore2;
    }

    public void setMsgScore2(JLabel msgScore2) {
        this.msgScore2 = msgScore2;
    }

    public JLabel getMsgScore3() {
        return msgScore3;
    }

    public void setMsgScore3(JLabel msgScore3) {
        this.msgScore3 = msgScore3;
    }

    public JLabel getMsgTurn() {
        return msgTurn;
    }

    public void setMsgTurn(JLabel msgTurn) {
        this.msgTurn = msgTurn;
    }

    public JButton getMsgAnswer() {
        return msgAnswer;
    }

    public void setMsgAnswer(JButton msgAnswer) {
        this.msgAnswer = msgAnswer;
    }

    public JLabel getMsgLastAnswer() {
        return msgLastAnswer;
    }

    public void setMsgLastAnswer(JLabel msgLastAnswer) {
        this.msgLastAnswer = msgLastAnswer;
    }

    public JLabel getMsgPackage() {
        return msgPackage;
    }

    public void setMsgPackage(JLabel msgPackage) {
        this.msgPackage = msgPackage;
    }

    public JLabel getMsgCorrectAnswer() {
        return msgCorrectAnswer;
    }

    public void setMsgCorrectAnswer(JLabel msgCorrectAnswer) {
        this.msgCorrectAnswer = msgCorrectAnswer;
    }

    public JLabel getMsgQuizHopeStar() {
        return msgQuizHopeStar;
    }

    public void setMsgQuizHopeStar(JLabel msgQuizHopeStar) {
        this.msgQuizHopeStar = msgQuizHopeStar;
    }

    public JLabel getMsgQuizNumber() {
        return msgQuizNumber;
    }

    public void setMsgQuizNumber(JLabel msgQuizNumber) {
        this.msgQuizNumber = msgQuizNumber;
    }

    public JLabel getMsgQuizPoint() {
        return msgQuizPoint;
    }

    public void setMsgQuizPoint(JLabel msgQuizPoint) {
        this.msgQuizPoint = msgQuizPoint;
    }

    public JTextArea getMsgQuizQuestion() {
        return msgQuizQuestion;
    }

    public void setMsgQuizQuestion(JTextArea msgQuizQuestion) {
        this.msgQuizQuestion = msgQuizQuestion;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgText = new javax.swing.JTextField();
        msgAnswer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        msgQuizQuestion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        msgQuizNumber = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        msgScore1 = new javax.swing.JLabel();
        msgScore2 = new javax.swing.JLabel();
        msgScore3 = new javax.swing.JLabel();
        msgPackage = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        msgTurn = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        msgLastAnswer = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        msgQuizPoint = new javax.swing.JLabel();
        msgQuizHopeStar = new javax.swing.JLabel();
        msgCorrectAnswer = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        msgAnswerAccept = new javax.swing.JButton();
        msgAnswerDeny = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        msgHopestarYes = new javax.swing.JButton();
        msgHopestarNo = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        msgRound = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msgText.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        msgAnswer.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        msgAnswer.setText("Answer");
        msgAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgAnswerActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel1.setText("Package:");

        msgQuizQuestion.setColumns(20);
        msgQuizQuestion.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        msgQuizQuestion.setRows(5);
        jScrollPane2.setViewportView(msgQuizQuestion);

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel3.setText("Olympia Game");

        msgQuizNumber.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        msgQuizNumber.setText("Question :");

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel5.setText("Score Board:");

        msgScore1.setFont(new java.awt.Font("Segoe Print", 1, 16)); // NOI18N

        msgScore2.setFont(new java.awt.Font("Segoe Print", 1, 16)); // NOI18N

        msgScore3.setFont(new java.awt.Font("Segoe Print", 1, 16)); // NOI18N

        msgPackage.setFont(new java.awt.Font("Segoe Print", 1, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel7.setText("Player's Turn:");

        msgTurn.setFont(new java.awt.Font("Segoe Print", 1, 16)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel2.setText("Last Answer:");

        msgLastAnswer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel8.setText("Correct Answer:");

        msgQuizPoint.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N

        msgQuizHopeStar.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        msgQuizHopeStar.setForeground(new java.awt.Color(153, 0, 153));
        msgQuizHopeStar.setText("*Hopestar*");
        msgQuizHopeStar.setToolTipText("");

        msgCorrectAnswer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel4.setText("Answer Choice:");

        msgAnswerAccept.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        msgAnswerAccept.setText("Accept");
        msgAnswerAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgAnswerAcceptActionPerformed(evt);
            }
        });

        msgAnswerDeny.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        msgAnswerDeny.setText("Deny");
        msgAnswerDeny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgAnswerDenyActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel6.setText("Hopestar Choice:");

        msgHopestarYes.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        msgHopestarYes.setText("Yes");
        msgHopestarYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgHopestarYesActionPerformed(evt);
            }
        });

        msgHopestarNo.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        msgHopestarNo.setText("No");
        msgHopestarNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgHopestarNoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel9.setText("Player's Round:");

        msgRound.setFont(new java.awt.Font("Segoe Print", 1, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(243, 243, 243))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8)
                    .addComponent(msgQuizHopeStar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(msgQuizPoint)
                        .addComponent(msgQuizNumber))
                    .addComponent(jLabel6)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(msgCorrectAnswer)
                                    .addComponent(msgLastAnswer))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(msgPackage)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel7)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(msgTurn)
                                    .addComponent(msgRound))
                                .addGap(69, 69, 69))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(msgText, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(msgAnswerAccept)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(msgHopestarYes)
                                                .addGap(12, 12, 12)))
                                        .addGap(66, 66, 66)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(msgHopestarNo)
                                            .addComponent(msgAnswerDeny))
                                        .addGap(29, 29, 29)))
                                .addGap(30, 30, 30)
                                .addComponent(msgAnswer))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(msgScore1)
                                .addGap(49, 49, 49)
                                .addComponent(msgScore2)
                                .addGap(54, 54, 54)
                                .addComponent(msgScore3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(msgScore1)
                    .addComponent(msgScore2)
                    .addComponent(msgScore3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msgPackage)
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(msgRound))))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(msgTurn))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(msgLastAnswer))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(msgCorrectAnswer))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msgQuizNumber)
                        .addGap(4, 4, 4)
                        .addComponent(msgQuizPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(msgQuizHopeStar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msgText, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(msgAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(msgAnswerAccept)
                            .addComponent(msgAnswerDeny))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msgHopestarYes)
                            .addComponent(msgHopestarNo)
                            .addComponent(jLabel6))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msgHopestarYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgHopestarYesActionPerformed
        try {
            String msgout = "(HopeStar)Yes";
            dout.writeUTF(msgout);
        } catch (IOException ex) {
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_msgHopestarYesActionPerformed

    private void msgHopestarNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgHopestarNoActionPerformed
        try {
            String msgout = "(HopeStar)No";
            dout.writeUTF(msgout);
        } catch (IOException ex) {
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_msgHopestarNoActionPerformed

    private void msgAnswerAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgAnswerAcceptActionPerformed
        try {
            String msgout = "(AnswerChoice)Accept";
            dout.writeUTF(msgout);
        } catch (IOException ex) {
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_msgAnswerAcceptActionPerformed

    private void msgAnswerDenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgAnswerDenyActionPerformed
        try {
            String msgout = "(AnswerChoice)Deny";
            dout.writeUTF(msgout);
        } catch (IOException ex) {
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_msgAnswerDenyActionPerformed

    private void msgAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgAnswerActionPerformed
        try {
            String msgout = "(Answer)";
            msgout = msgout.concat(msgText.getText().trim());
            dout.writeUTF(msgout);
        } catch (IOException ex) {
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_msgAnswerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gameplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gameplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gameplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gameplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gameplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton msgAnswer;
    private javax.swing.JButton msgAnswerAccept;
    private javax.swing.JButton msgAnswerDeny;
    private javax.swing.JLabel msgCorrectAnswer;
    private javax.swing.JButton msgHopestarNo;
    private javax.swing.JButton msgHopestarYes;
    private javax.swing.JLabel msgLastAnswer;
    private javax.swing.JLabel msgPackage;
    private javax.swing.JLabel msgQuizHopeStar;
    private javax.swing.JLabel msgQuizNumber;
    private javax.swing.JLabel msgQuizPoint;
    private javax.swing.JTextArea msgQuizQuestion;
    private javax.swing.JLabel msgRound;
    private javax.swing.JLabel msgScore1;
    private javax.swing.JLabel msgScore2;
    private javax.swing.JLabel msgScore3;
    private javax.swing.JTextField msgText;
    private javax.swing.JLabel msgTurn;
    // End of variables declaration//GEN-END:variables
}
